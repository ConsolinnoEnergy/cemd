// Code generated by mockery v2.40.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// EvseCCUseCaseInterface is an autogenerated mock type for the EvseCCUseCaseInterface type
type EvseCCUseCaseInterface struct {
	mock.Mock
}

type EvseCCUseCaseInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *EvseCCUseCaseInterface) EXPECT() *EvseCCUseCaseInterface_Expecter {
	return &EvseCCUseCaseInterface_Expecter{mock: &_m.Mock}
}

// AddFeatures provides a mock function with given fields:
func (_m *EvseCCUseCaseInterface) AddFeatures() {
	_m.Called()
}

// EvseCCUseCaseInterface_AddFeatures_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddFeatures'
type EvseCCUseCaseInterface_AddFeatures_Call struct {
	*mock.Call
}

// AddFeatures is a helper method to define mock.On call
func (_e *EvseCCUseCaseInterface_Expecter) AddFeatures() *EvseCCUseCaseInterface_AddFeatures_Call {
	return &EvseCCUseCaseInterface_AddFeatures_Call{Call: _e.mock.On("AddFeatures")}
}

func (_c *EvseCCUseCaseInterface_AddFeatures_Call) Run(run func()) *EvseCCUseCaseInterface_AddFeatures_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *EvseCCUseCaseInterface_AddFeatures_Call) Return() *EvseCCUseCaseInterface_AddFeatures_Call {
	_c.Call.Return()
	return _c
}

func (_c *EvseCCUseCaseInterface_AddFeatures_Call) RunAndReturn(run func()) *EvseCCUseCaseInterface_AddFeatures_Call {
	_c.Call.Return(run)
	return _c
}

// AddUseCase provides a mock function with given fields:
func (_m *EvseCCUseCaseInterface) AddUseCase() {
	_m.Called()
}

// EvseCCUseCaseInterface_AddUseCase_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddUseCase'
type EvseCCUseCaseInterface_AddUseCase_Call struct {
	*mock.Call
}

// AddUseCase is a helper method to define mock.On call
func (_e *EvseCCUseCaseInterface_Expecter) AddUseCase() *EvseCCUseCaseInterface_AddUseCase_Call {
	return &EvseCCUseCaseInterface_AddUseCase_Call{Call: _e.mock.On("AddUseCase")}
}

func (_c *EvseCCUseCaseInterface_AddUseCase_Call) Run(run func()) *EvseCCUseCaseInterface_AddUseCase_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *EvseCCUseCaseInterface_AddUseCase_Call) Return() *EvseCCUseCaseInterface_AddUseCase_Call {
	_c.Call.Return()
	return _c
}

func (_c *EvseCCUseCaseInterface_AddUseCase_Call) RunAndReturn(run func()) *EvseCCUseCaseInterface_AddUseCase_Call {
	_c.Call.Return(run)
	return _c
}

// NewEvseCCUseCaseInterface creates a new instance of EvseCCUseCaseInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEvseCCUseCaseInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *EvseCCUseCaseInterface {
	mock := &EvseCCUseCaseInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
